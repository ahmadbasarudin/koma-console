/*
 * script route generated by KOMA
 * @author : Yan Yan Purdiansah
 */

const mysql = require('mysql');
const mybatisMapper = require('mybatis-mapper');

const dbpool = mysql.createPool({
    connectionLimit : 100,
    host: 'localhost',
    user: 'root',
    password : '',
    database: 'microsb_node',
    debug    :  false
});

const createQuery = function(mapper,namespace,method,jsonObj){
    mybatisMapper.createMapper(mapper);
    var format = {language: 'sql', indent: '  '};
    var query = mybatisMapper.getStatement(namespace,method, jsonObj, format);
    return query;
}

module.exports = {

    Dao: class Dao {

        constructor() {
        }
          
        searchMsbAccount(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbAccountSearchMapper.xml'], 'searchMsbAccountMapper', 'searchMsbAccount', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
            });
        }
        searchMsbAffiliation(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbAffiliationSearchMapper.xml'], 'searchMsbAffiliationMapper', 'searchMsbAffiliation', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
            });
        }
        searchMsbAuthorities(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbAuthoritiesSearchMapper.xml'], 'searchMsbAuthoritiesMapper', 'searchMsbAuthorities', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
            });
        }
        searchMsbMenus(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbMenusSearchMapper.xml'], 'searchMsbMenusMapper', 'searchMsbMenus', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
            });
        }
        searchMsbMucaffiliation(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbMucaffiliationSearchMapper.xml'], 'searchMsbMucaffiliationMapper', 'searchMsbMucaffiliation', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
            });
        }
        searchMsbMucmember(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbMucmemberSearchMapper.xml'], 'searchMsbMucmemberMapper', 'searchMsbMucmember', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
            });
        }
        searchMsbMucroom(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbMucroomSearchMapper.xml'], 'searchMsbMucroomMapper', 'searchMsbMucroom', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
            });
        }
        searchMsbMucroomprop(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbMucroompropSearchMapper.xml'], 'searchMsbMucroompropMapper', 'searchMsbMucroomprop', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
               
            });
        }
        searchMsbMucservice(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbMucserviceSearchMapper.xml'], 'searchMsbMucserviceMapper', 'searchMsbMucservice', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        searchMsbMucserviceprop(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbMucservicepropSearchMapper.xml'], 'searchMsbMucservicepropMapper', 'searchMsbMucserviceprop', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        searchMsbOffline(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbOfflineSearchMapper.xml'], 'searchMsbOfflineMapper', 'searchMsbOffline', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        searchMsbPersistentLogins(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbPersistentLoginsSearchMapper.xml'], 'searchMsbPersistentLoginsMapper', 'searchMsbPersistentLogins', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        searchMsbPresence(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbPresenceSearchMapper.xml'], 'searchMsbPresenceMapper', 'searchMsbPresence', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        searchMsbProperty(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbPropertySearchMapper.xml'], 'searchMsbPropertyMapper', 'searchMsbProperty', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        searchMsbPubsub(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbPubsubSearchMapper.xml'], 'searchMsbPubsubMapper', 'searchMsbPubsub', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        searchMsbPubsubaffiliation(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbPubsubaffiliationSearchMapper.xml'], 'searchMsbPubsubaffiliationMapper', 'searchMsbPubsubaffiliation', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        searchMsbPubsubitem(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbPubsubitemSearchMapper.xml'], 'searchMsbPubsubitemMapper', 'searchMsbPubsubitem', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        searchMsbPubsubnode(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbPubsubnodeSearchMapper.xml'], 'searchMsbPubsubnodeMapper', 'searchMsbPubsubnode', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        searchMsbPubsubnodegroups(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbPubsubnodegroupsSearchMapper.xml'], 'searchMsbPubsubnodegroupsMapper', 'searchMsbPubsubnodegroups', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        searchMsbPubsubsubscriber(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbPubsubsubscriberSearchMapper.xml'], 'searchMsbPubsubsubscriberMapper', 'searchMsbPubsubsubscriber', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        searchMsbPubsubsubscription(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbPubsubsubscriptionSearchMapper.xml'], 'searchMsbPubsubsubscriptionMapper', 'searchMsbPubsubsubscription', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        searchMsbRemoteserver(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbRemoteserverSearchMapper.xml'], 'searchMsbRemoteserverMapper', 'searchMsbRemoteserver', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        searchMsbRevenue(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbRevenueSearchMapper.xml'], 'searchMsbRevenueMapper', 'searchMsbRevenue', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        searchMsbRoster(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbRosterSearchMapper.xml'], 'searchMsbRosterMapper', 'searchMsbRoster', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        searchMsbRostergroups(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbRostergroupsSearchMapper.xml'], 'searchMsbRostergroupsMapper', 'searchMsbRostergroups', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        searchMsbSession(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbSessionSearchMapper.xml'], 'searchMsbSessionMapper', 'searchMsbSession', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        searchMsbSubscriber(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbSubscriberSearchMapper.xml'], 'searchMsbSubscriberMapper', 'searchMsbSubscriber', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        searchMsbSubscriberprop(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbSubscriberpropSearchMapper.xml'], 'searchMsbSubscriberpropMapper', 'searchMsbSubscriberprop', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        searchMsbSubscribertype(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbSubscribertypeSearchMapper.xml'], 'searchMsbSubscribertypeMapper', 'searchMsbSubscribertype', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        searchMsbTraffic(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbTrafficSearchMapper.xml'], 'searchMsbTrafficMapper', 'searchMsbTraffic', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        searchMsbVcard(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbVcardSearchMapper.xml'], 'searchMsbVcardMapper', 'searchMsbVcard', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        searchMsbVersion(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbVersionSearchMapper.xml'], 'searchMsbVersionMapper', 'searchMsbVersion', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        readMsbAccount(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbAccountReadMapper.xml'], 'readMsbAccountMapper', 'readMsbAccount', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        readMsbAccountMsbAuthorities(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbAccountReadMapper.xml'], 'readMsbAccountMapper', 'readMsbAccountMsbAuthorities', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }                
        readMsbAccountMsbPersistentLogins(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbAccountReadMapper.xml'], 'readMsbAccountMapper', 'readMsbAccountMsbPersistentLogins', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }                
        readMsbAccountMsbSubscriber(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbAccountReadMapper.xml'], 'readMsbAccountMapper', 'readMsbAccountMsbSubscriber', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }                
        readMsbAffiliation(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbAffiliationReadMapper.xml'], 'readMsbAffiliationMapper', 'readMsbAffiliation', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        readMsbAuthorities(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbAuthoritiesReadMapper.xml'], 'readMsbAuthoritiesMapper', 'readMsbAuthorities', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        readMsbMenus(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbMenusReadMapper.xml'], 'readMsbMenusMapper', 'readMsbMenus', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        readMsbMucaffiliation(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbMucaffiliationReadMapper.xml'], 'readMsbMucaffiliationMapper', 'readMsbMucaffiliation', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        readMsbMucmember(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbMucmemberReadMapper.xml'], 'readMsbMucmemberMapper', 'readMsbMucmember', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        readMsbMucroom(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbMucroomReadMapper.xml'], 'readMsbMucroomMapper', 'readMsbMucroom', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        readMsbMucroomMsbMucaffiliation(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbMucroomReadMapper.xml'], 'readMsbMucroomMapper', 'readMsbMucroomMsbMucaffiliation', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }                
        readMsbMucroomMsbMucmember(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbMucroomReadMapper.xml'], 'readMsbMucroomMapper', 'readMsbMucroomMsbMucmember', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }                
        readMsbMucroomMsbMucroomprop(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbMucroomReadMapper.xml'], 'readMsbMucroomMapper', 'readMsbMucroomMsbMucroomprop', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }                
        readMsbMucroomprop(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbMucroompropReadMapper.xml'], 'readMsbMucroompropMapper', 'readMsbMucroomprop', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        readMsbMucservice(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbMucserviceReadMapper.xml'], 'readMsbMucserviceMapper', 'readMsbMucservice', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        readMsbMucserviceMsbMucroom(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbMucserviceReadMapper.xml'], 'readMsbMucserviceMapper', 'readMsbMucserviceMsbMucroom', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }                
        readMsbMucserviceMsbMucserviceprop(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbMucserviceReadMapper.xml'], 'readMsbMucserviceMapper', 'readMsbMucserviceMsbMucserviceprop', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }                
        readMsbMucserviceprop(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbMucservicepropReadMapper.xml'], 'readMsbMucservicepropMapper', 'readMsbMucserviceprop', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        readMsbOffline(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbOfflineReadMapper.xml'], 'readMsbOfflineMapper', 'readMsbOffline', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        readMsbPersistentLogins(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbPersistentLoginsReadMapper.xml'], 'readMsbPersistentLoginsMapper', 'readMsbPersistentLogins', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        readMsbPresence(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbPresenceReadMapper.xml'], 'readMsbPresenceMapper', 'readMsbPresence', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        readMsbProperty(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbPropertyReadMapper.xml'], 'readMsbPropertyMapper', 'readMsbProperty', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        readMsbPubsub(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbPubsubReadMapper.xml'], 'readMsbPubsubMapper', 'readMsbPubsub', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        readMsbPubsubMsbPubsubnode(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbPubsubReadMapper.xml'], 'readMsbPubsubMapper', 'readMsbPubsubMsbPubsubnode', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }                
        readMsbPubsubaffiliation(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbPubsubaffiliationReadMapper.xml'], 'readMsbPubsubaffiliationMapper', 'readMsbPubsubaffiliation', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        readMsbPubsubitem(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbPubsubitemReadMapper.xml'], 'readMsbPubsubitemMapper', 'readMsbPubsubitem', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        readMsbPubsubnode(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbPubsubnodeReadMapper.xml'], 'readMsbPubsubnodeMapper', 'readMsbPubsubnode', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        readMsbPubsubnodeMsbPubsubitem(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbPubsubnodeReadMapper.xml'], 'readMsbPubsubnodeMapper', 'readMsbPubsubnodeMsbPubsubitem', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }                
        readMsbPubsubnodegroups(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbPubsubnodegroupsReadMapper.xml'], 'readMsbPubsubnodegroupsMapper', 'readMsbPubsubnodegroups', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        readMsbPubsubsubscriber(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbPubsubsubscriberReadMapper.xml'], 'readMsbPubsubsubscriberMapper', 'readMsbPubsubsubscriber', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        readMsbPubsubsubscription(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbPubsubsubscriptionReadMapper.xml'], 'readMsbPubsubsubscriptionMapper', 'readMsbPubsubsubscription', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        readMsbRemoteserver(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbRemoteserverReadMapper.xml'], 'readMsbRemoteserverMapper', 'readMsbRemoteserver', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        readMsbRevenue(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbRevenueReadMapper.xml'], 'readMsbRevenueMapper', 'readMsbRevenue', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        readMsbRoster(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbRosterReadMapper.xml'], 'readMsbRosterMapper', 'readMsbRoster', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        readMsbRosterMsbRostergroups(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbRosterReadMapper.xml'], 'readMsbRosterMapper', 'readMsbRosterMsbRostergroups', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }                
        readMsbRostergroups(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbRostergroupsReadMapper.xml'], 'readMsbRostergroupsMapper', 'readMsbRostergroups', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        readMsbSession(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbSessionReadMapper.xml'], 'readMsbSessionMapper', 'readMsbSession', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        readMsbSubscriber(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbSubscriberReadMapper.xml'], 'readMsbSubscriberMapper', 'readMsbSubscriber', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        readMsbSubscriberMsbMucmember(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbSubscriberReadMapper.xml'], 'readMsbSubscriberMapper', 'readMsbSubscriberMsbMucmember', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }                
        readMsbSubscriberMsbOffline(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbSubscriberReadMapper.xml'], 'readMsbSubscriberMapper', 'readMsbSubscriberMsbOffline', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }                
        readMsbSubscriberMsbPresence(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbSubscriberReadMapper.xml'], 'readMsbSubscriberMapper', 'readMsbSubscriberMsbPresence', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }                
        readMsbSubscriberMsbRevenue(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbSubscriberReadMapper.xml'], 'readMsbSubscriberMapper', 'readMsbSubscriberMsbRevenue', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }                
        readMsbSubscriberMsbRoster(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbSubscriberReadMapper.xml'], 'readMsbSubscriberMapper', 'readMsbSubscriberMsbRoster', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }                
        readMsbSubscriberMsbSession(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbSubscriberReadMapper.xml'], 'readMsbSubscriberMapper', 'readMsbSubscriberMsbSession', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }                
        readMsbSubscriberMsbSubscriberprop(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbSubscriberReadMapper.xml'], 'readMsbSubscriberMapper', 'readMsbSubscriberMsbSubscriberprop', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }                
        readMsbSubscriberMsbTraffic(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbSubscriberReadMapper.xml'], 'readMsbSubscriberMapper', 'readMsbSubscriberMsbTraffic', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }                
        readMsbSubscriberMsbVcard(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbSubscriberReadMapper.xml'], 'readMsbSubscriberMapper', 'readMsbSubscriberMsbVcard', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }                
        readMsbSubscriberprop(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbSubscriberpropReadMapper.xml'], 'readMsbSubscriberpropMapper', 'readMsbSubscriberprop', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        readMsbSubscribertype(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbSubscribertypeReadMapper.xml'], 'readMsbSubscribertypeMapper', 'readMsbSubscribertype', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        readMsbSubscribertypeMsbSubscriber(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbSubscribertypeReadMapper.xml'], 'readMsbSubscribertypeMapper', 'readMsbSubscribertypeMsbSubscriber', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }                
        readMsbTraffic(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbTrafficReadMapper.xml'], 'readMsbTrafficMapper', 'readMsbTraffic', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        readMsbVcard(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbVcardReadMapper.xml'], 'readMsbVcardMapper', 'readMsbVcard', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        readMsbVersion(jsonObj, callback) {    
            var query = createQuery(['./mapper/MsbVersionReadMapper.xml'], 'readMsbVersionMapper', 'readMsbVersion', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        newMsbAccount(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbAccountNewMapper.xml'], 'newMsbAccountMapper', 'newMsbAccount', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        newMsbAffiliation(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbAffiliationNewMapper.xml'], 'newMsbAffiliationMapper', 'newMsbAffiliation', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        newMsbAuthorities(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbAuthoritiesNewMapper.xml'], 'newMsbAuthoritiesMapper', 'newMsbAuthorities', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        newMsbMenus(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbMenusNewMapper.xml'], 'newMsbMenusMapper', 'newMsbMenus', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        newMsbMucaffiliation(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbMucaffiliationNewMapper.xml'], 'newMsbMucaffiliationMapper', 'newMsbMucaffiliation', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        newMsbMucmember(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbMucmemberNewMapper.xml'], 'newMsbMucmemberMapper', 'newMsbMucmember', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        newMsbMucroom(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbMucroomNewMapper.xml'], 'newMsbMucroomMapper', 'newMsbMucroom', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        newMsbMucroomprop(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbMucroompropNewMapper.xml'], 'newMsbMucroompropMapper', 'newMsbMucroomprop', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        newMsbMucservice(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbMucserviceNewMapper.xml'], 'newMsbMucserviceMapper', 'newMsbMucservice', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        newMsbMucserviceprop(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbMucservicepropNewMapper.xml'], 'newMsbMucservicepropMapper', 'newMsbMucserviceprop', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        newMsbOffline(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbOfflineNewMapper.xml'], 'newMsbOfflineMapper', 'newMsbOffline', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        newMsbPersistentLogins(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbPersistentLoginsNewMapper.xml'], 'newMsbPersistentLoginsMapper', 'newMsbPersistentLogins', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        newMsbPresence(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbPresenceNewMapper.xml'], 'newMsbPresenceMapper', 'newMsbPresence', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        newMsbProperty(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbPropertyNewMapper.xml'], 'newMsbPropertyMapper', 'newMsbProperty', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        newMsbPubsub(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbPubsubNewMapper.xml'], 'newMsbPubsubMapper', 'newMsbPubsub', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        newMsbPubsubaffiliation(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbPubsubaffiliationNewMapper.xml'], 'newMsbPubsubaffiliationMapper', 'newMsbPubsubaffiliation', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        newMsbPubsubitem(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbPubsubitemNewMapper.xml'], 'newMsbPubsubitemMapper', 'newMsbPubsubitem', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        newMsbPubsubnode(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbPubsubnodeNewMapper.xml'], 'newMsbPubsubnodeMapper', 'newMsbPubsubnode', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        newMsbPubsubnodegroups(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbPubsubnodegroupsNewMapper.xml'], 'newMsbPubsubnodegroupsMapper', 'newMsbPubsubnodegroups', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        newMsbPubsubsubscriber(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbPubsubsubscriberNewMapper.xml'], 'newMsbPubsubsubscriberMapper', 'newMsbPubsubsubscriber', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        newMsbPubsubsubscription(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbPubsubsubscriptionNewMapper.xml'], 'newMsbPubsubsubscriptionMapper', 'newMsbPubsubsubscription', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        newMsbRemoteserver(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbRemoteserverNewMapper.xml'], 'newMsbRemoteserverMapper', 'newMsbRemoteserver', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        newMsbRevenue(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbRevenueNewMapper.xml'], 'newMsbRevenueMapper', 'newMsbRevenue', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        newMsbRoster(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbRosterNewMapper.xml'], 'newMsbRosterMapper', 'newMsbRoster', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        newMsbRostergroups(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbRostergroupsNewMapper.xml'], 'newMsbRostergroupsMapper', 'newMsbRostergroups', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        newMsbSession(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbSessionNewMapper.xml'], 'newMsbSessionMapper', 'newMsbSession', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        newMsbSubscriber(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbSubscriberNewMapper.xml'], 'newMsbSubscriberMapper', 'newMsbSubscriber', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        newMsbSubscriberprop(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbSubscriberpropNewMapper.xml'], 'newMsbSubscriberpropMapper', 'newMsbSubscriberprop', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        newMsbSubscribertype(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbSubscribertypeNewMapper.xml'], 'newMsbSubscribertypeMapper', 'newMsbSubscribertype', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        newMsbTraffic(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbTrafficNewMapper.xml'], 'newMsbTrafficMapper', 'newMsbTraffic', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        newMsbVcard(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbVcardNewMapper.xml'], 'newMsbVcardMapper', 'newMsbVcard', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        newMsbVersion(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbVersionNewMapper.xml'], 'newMsbVersionMapper', 'newMsbVersion', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        writeMsbAccount(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbAccountWriteMapper.xml'], 'writeMsbAccountMapper', 'writeMsbAccount', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        writeMsbAffiliation(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbAffiliationWriteMapper.xml'], 'writeMsbAffiliationMapper', 'writeMsbAffiliation', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        writeMsbAuthorities(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbAuthoritiesWriteMapper.xml'], 'writeMsbAuthoritiesMapper', 'writeMsbAuthorities', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        writeMsbMenus(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbMenusWriteMapper.xml'], 'writeMsbMenusMapper', 'writeMsbMenus', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        writeMsbMucaffiliation(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbMucaffiliationWriteMapper.xml'], 'writeMsbMucaffiliationMapper', 'writeMsbMucaffiliation', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        writeMsbMucmember(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbMucmemberWriteMapper.xml'], 'writeMsbMucmemberMapper', 'writeMsbMucmember', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        writeMsbMucroom(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbMucroomWriteMapper.xml'], 'writeMsbMucroomMapper', 'writeMsbMucroom', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        writeMsbMucroomprop(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbMucroompropWriteMapper.xml'], 'writeMsbMucroompropMapper', 'writeMsbMucroomprop', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        writeMsbMucservice(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbMucserviceWriteMapper.xml'], 'writeMsbMucserviceMapper', 'writeMsbMucservice', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        writeMsbMucserviceprop(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbMucservicepropWriteMapper.xml'], 'writeMsbMucservicepropMapper', 'writeMsbMucserviceprop', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        writeMsbOffline(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbOfflineWriteMapper.xml'], 'writeMsbOfflineMapper', 'writeMsbOffline', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        writeMsbPersistentLogins(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbPersistentLoginsWriteMapper.xml'], 'writeMsbPersistentLoginsMapper', 'writeMsbPersistentLogins', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        writeMsbPresence(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbPresenceWriteMapper.xml'], 'writeMsbPresenceMapper', 'writeMsbPresence', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        writeMsbProperty(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbPropertyWriteMapper.xml'], 'writeMsbPropertyMapper', 'writeMsbProperty', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        writeMsbPubsub(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbPubsubWriteMapper.xml'], 'writeMsbPubsubMapper', 'writeMsbPubsub', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        writeMsbPubsubaffiliation(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbPubsubaffiliationWriteMapper.xml'], 'writeMsbPubsubaffiliationMapper', 'writeMsbPubsubaffiliation', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        writeMsbPubsubitem(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbPubsubitemWriteMapper.xml'], 'writeMsbPubsubitemMapper', 'writeMsbPubsubitem', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        writeMsbPubsubnode(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbPubsubnodeWriteMapper.xml'], 'writeMsbPubsubnodeMapper', 'writeMsbPubsubnode', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        writeMsbPubsubnodegroups(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbPubsubnodegroupsWriteMapper.xml'], 'writeMsbPubsubnodegroupsMapper', 'writeMsbPubsubnodegroups', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        writeMsbPubsubsubscriber(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbPubsubsubscriberWriteMapper.xml'], 'writeMsbPubsubsubscriberMapper', 'writeMsbPubsubsubscriber', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        writeMsbPubsubsubscription(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbPubsubsubscriptionWriteMapper.xml'], 'writeMsbPubsubsubscriptionMapper', 'writeMsbPubsubsubscription', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        writeMsbRemoteserver(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbRemoteserverWriteMapper.xml'], 'writeMsbRemoteserverMapper', 'writeMsbRemoteserver', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        writeMsbRevenue(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbRevenueWriteMapper.xml'], 'writeMsbRevenueMapper', 'writeMsbRevenue', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        writeMsbRoster(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbRosterWriteMapper.xml'], 'writeMsbRosterMapper', 'writeMsbRoster', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        writeMsbRostergroups(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbRostergroupsWriteMapper.xml'], 'writeMsbRostergroupsMapper', 'writeMsbRostergroups', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        writeMsbSession(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbSessionWriteMapper.xml'], 'writeMsbSessionMapper', 'writeMsbSession', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        writeMsbSubscriber(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbSubscriberWriteMapper.xml'], 'writeMsbSubscriberMapper', 'writeMsbSubscriber', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        writeMsbSubscriberprop(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbSubscriberpropWriteMapper.xml'], 'writeMsbSubscriberpropMapper', 'writeMsbSubscriberprop', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        writeMsbSubscribertype(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbSubscribertypeWriteMapper.xml'], 'writeMsbSubscribertypeMapper', 'writeMsbSubscribertype', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        writeMsbTraffic(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbTrafficWriteMapper.xml'], 'writeMsbTrafficMapper', 'writeMsbTraffic', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        writeMsbVcard(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbVcardWriteMapper.xml'], 'writeMsbVcardMapper', 'writeMsbVcard', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        writeMsbVersion(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbVersionWriteMapper.xml'], 'writeMsbVersionMapper', 'writeMsbVersion', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        deleteMsbAccount(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbAccountDeleteMapper.xml'], 'deleteMsbAccountMapper', 'deleteMsbAccount', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        deleteMsbAffiliation(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbAffiliationDeleteMapper.xml'], 'deleteMsbAffiliationMapper', 'deleteMsbAffiliation', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        deleteMsbAuthorities(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbAuthoritiesDeleteMapper.xml'], 'deleteMsbAuthoritiesMapper', 'deleteMsbAuthorities', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        deleteMsbMenus(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbMenusDeleteMapper.xml'], 'deleteMsbMenusMapper', 'deleteMsbMenus', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        deleteMsbMucaffiliation(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbMucaffiliationDeleteMapper.xml'], 'deleteMsbMucaffiliationMapper', 'deleteMsbMucaffiliation', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        deleteMsbMucmember(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbMucmemberDeleteMapper.xml'], 'deleteMsbMucmemberMapper', 'deleteMsbMucmember', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        deleteMsbMucroom(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbMucroomDeleteMapper.xml'], 'deleteMsbMucroomMapper', 'deleteMsbMucroom', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        deleteMsbMucroomprop(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbMucroompropDeleteMapper.xml'], 'deleteMsbMucroompropMapper', 'deleteMsbMucroomprop', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        deleteMsbMucservice(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbMucserviceDeleteMapper.xml'], 'deleteMsbMucserviceMapper', 'deleteMsbMucservice', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        deleteMsbMucserviceprop(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbMucservicepropDeleteMapper.xml'], 'deleteMsbMucservicepropMapper', 'deleteMsbMucserviceprop', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        deleteMsbOffline(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbOfflineDeleteMapper.xml'], 'deleteMsbOfflineMapper', 'deleteMsbOffline', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        deleteMsbPersistentLogins(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbPersistentLoginsDeleteMapper.xml'], 'deleteMsbPersistentLoginsMapper', 'deleteMsbPersistentLogins', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        deleteMsbPresence(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbPresenceDeleteMapper.xml'], 'deleteMsbPresenceMapper', 'deleteMsbPresence', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        deleteMsbProperty(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbPropertyDeleteMapper.xml'], 'deleteMsbPropertyMapper', 'deleteMsbProperty', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        deleteMsbPubsub(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbPubsubDeleteMapper.xml'], 'deleteMsbPubsubMapper', 'deleteMsbPubsub', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        deleteMsbPubsubaffiliation(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbPubsubaffiliationDeleteMapper.xml'], 'deleteMsbPubsubaffiliationMapper', 'deleteMsbPubsubaffiliation', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        deleteMsbPubsubitem(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbPubsubitemDeleteMapper.xml'], 'deleteMsbPubsubitemMapper', 'deleteMsbPubsubitem', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        deleteMsbPubsubnode(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbPubsubnodeDeleteMapper.xml'], 'deleteMsbPubsubnodeMapper', 'deleteMsbPubsubnode', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        deleteMsbPubsubnodegroups(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbPubsubnodegroupsDeleteMapper.xml'], 'deleteMsbPubsubnodegroupsMapper', 'deleteMsbPubsubnodegroups', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        deleteMsbPubsubsubscriber(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbPubsubsubscriberDeleteMapper.xml'], 'deleteMsbPubsubsubscriberMapper', 'deleteMsbPubsubsubscriber', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        deleteMsbPubsubsubscription(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbPubsubsubscriptionDeleteMapper.xml'], 'deleteMsbPubsubsubscriptionMapper', 'deleteMsbPubsubsubscription', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        deleteMsbRemoteserver(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbRemoteserverDeleteMapper.xml'], 'deleteMsbRemoteserverMapper', 'deleteMsbRemoteserver', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        deleteMsbRevenue(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbRevenueDeleteMapper.xml'], 'deleteMsbRevenueMapper', 'deleteMsbRevenue', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        deleteMsbRoster(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbRosterDeleteMapper.xml'], 'deleteMsbRosterMapper', 'deleteMsbRoster', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        deleteMsbRostergroups(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbRostergroupsDeleteMapper.xml'], 'deleteMsbRostergroupsMapper', 'deleteMsbRostergroups', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        deleteMsbSession(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbSessionDeleteMapper.xml'], 'deleteMsbSessionMapper', 'deleteMsbSession', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        deleteMsbSubscriber(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbSubscriberDeleteMapper.xml'], 'deleteMsbSubscriberMapper', 'deleteMsbSubscriber', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        deleteMsbSubscriberprop(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbSubscriberpropDeleteMapper.xml'], 'deleteMsbSubscriberpropMapper', 'deleteMsbSubscriberprop', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        deleteMsbSubscribertype(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbSubscribertypeDeleteMapper.xml'], 'deleteMsbSubscribertypeMapper', 'deleteMsbSubscribertype', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        deleteMsbTraffic(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbTrafficDeleteMapper.xml'], 'deleteMsbTrafficMapper', 'deleteMsbTraffic', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        deleteMsbVcard(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbVcardDeleteMapper.xml'], 'deleteMsbVcardMapper', 'deleteMsbVcard', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        deleteMsbVersion(jsonObj, callback) {
            var query = createQuery(['./mapper/MsbVersionDeleteMapper.xml'], 'deleteMsbVersionMapper', 'deleteMsbVersion', jsonObj);
            dbpool.query(query, function (err, rows, fields) {                
                callback(err,rows);
                
            });
        }
        
    }
}
