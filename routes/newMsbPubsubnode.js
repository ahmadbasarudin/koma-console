/*
 * script route generated by KOMA
 * @author : Yan Yan Purdiansah
 */    
var express = require('express');
var router = express.Router();
var dateFormat = require('dateformat');    
var database = require('./dao');
var dao = new database.Dao();    
var sessionChecker = require('./security');
var appresource = {
    Title:'MsbPubsubnodeNew',
    Heading:'MsbPubsubnode',
    Serviceid:{label :'Serviceid'},
    Nodeid:{label :'Nodeid'},
    Leaf:{label :'Leaf'},
    Creationdate:{label :'Creationdate'},
    Modificationdate:{label :'Modificationdate'},
    Parent:{label :'Parent'},
    Deliverpayloads:{label :'Deliverpayloads'},
    Maxpayloadsize:{label :'Maxpayloadsize'},
    Persistitems:{label :'Persistitems'},
    Maxitems:{label :'Maxitems'},
    Notifyconfigchanges:{label :'Notifyconfigchanges'},
    Notifydelete:{label :'Notifydelete'},
    Notifyretract:{label :'Notifyretract'},
    Presencebased:{label :'Presencebased'},
    Senditemsubscribe:{label :'Senditemsubscribe'},
    Publishermodel:{label :'Publishermodel'},
    Subscriptionenabled:{label :'Subscriptionenabled'},
    Configsubscription:{label :'Configsubscription'},
    Accessmodel:{label :'Accessmodel'},
    Payloadtype:{label :'Payloadtype'},
    Bodyxslt:{label :'Bodyxslt'},
    Dataformxslt:{label :'Dataformxslt'},
    Creator:{label :'Creator'},
    Description:{label :'Description'},
    Language:{label :'Language'},
    Name:{label :'Name'},
    Replypolicy:{label :'Replypolicy'},
    Associationpolicy:{label :'Associationpolicy'},
    Maxleafnodes:{label :'Maxleafnodes'},
    }

router.get('/', sessionChecker, function(req, res, next) {
    parameter = {
        session: req.session,
        cookies: req.cookies,
        resource: appresource,
        dateFormat: dateFormat,
        statusCode:100,
        statusMessage:'',        
        record:{serviceid:'',
        nodeid:'',
        leaf:'',
        creationdate:'',
        modificationdate:'',
        parent:'',
        deliverpayloads:'',
        maxpayloadsize:'',
        persistitems:'',
        maxitems:'',
        notifyconfigchanges:'',
        notifydelete:'',
        notifyretract:'',
        presencebased:'',
        senditemsubscribe:'',
        publishermodel:'',
        subscriptionenabled:'',
        configsubscription:'',
        accessmodel:'',
        payloadtype:'',
        bodyxslt:'',
        dataformxslt:'',
        creator:'',
        description:'',
        language:'',
        name:'',
        replypolicy:'',
        associationpolicy:'',
        maxleafnodes:'',
        }
    }
    res.render('MsbPubsubnodeNewPage',parameter);
    console.log(parameter);
});
router.post('/', sessionChecker, function(req, res, next) {
    var jsonObj = req.body;
    parameter = {
        session: req.session,
        cookies: req.cookies,
        resource: appresource,
        dateFormat: dateFormat,
    }    
    dao.newMsbPubsubnode(jsonObj,function(err,rows) {
        if(err==null){
            parameter.statusCode = 200;
            parameter.statusMessage = 'Successfully created';
        }else{
            parameter.statusCode = err.code;
            parameter.statusMessage = err.message;
        }
        parameter.record = jsonObj;
        res.render('MsbPubsubnodeNewPage',parameter);
        console.log(parameter);        
    });
});

module.exports = router;
